AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a SageMaker Notebook Instance with pre-loaded code files

Parameters:
  NotebookInstanceName:
    Type: String
    Default: multi-agents-jam-instance
  InstanceType:
    Type: String
    Default: ml.m5.xlarge
  VolumeSizeInGB:
    Type: Number
    Default: 200

Resources:
  NotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      NotebookInstanceName: !Ref NotebookInstanceName
      InstanceType: !Ref InstanceType
      RoleArn: !GetAtt ExecutionRole.Arn
      DirectInternetAccess: Enabled
      VolumeSizeInGB: !Ref VolumeSizeInGB
      LifecycleConfigName: !GetAtt NotebookLifecycleConfig.NotebookInstanceLifecycleConfigName

  NotebookLifecycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties:
      OnStart:
        - Content:
            Fn::Base64: !Sub |
              #!/bin/bash
              set -e
              aws s3 cp s3://aws-jam-challenge-resources-${AWS::Region}/storybook-multi-agents/book_writing_01.ipynb /home/ec2-user/SageMaker/
              aws s3 cp s3://aws-jam-challenge-resources-${AWS::Region}/storybook-multi-agents/book_writing_02.ipynb /home/ec2-user/SageMaker/
              aws s3 cp s3://aws-jam-challenge-resources-${AWS::Region}/storybook-multi-agents/book_writing_03.ipynb /home/ec2-user/SageMaker/
              aws s3 cp s3://aws-jam-challenge-resources-${AWS::Region}/storybook-multi-agents/book_writing_04.ipynb /home/ec2-user/SageMaker/
              aws s3 cp s3://aws-jam-challenge-resources-${AWS::Region}/storybook-multi-agents/story_agents.zip /home/ec2-user/SageMaker/
              aws s3 cp s3://aws-jam-challenge-resources-${AWS::Region}/storybook-multi-agents/StoryDiffusion.zip /home/ec2-user/SageMaker/
              unzip /home/ec2-user/SageMaker/story_agents.zip -d /home/ec2-user/SageMaker/
              unzip /home/ec2-user/SageMaker/StoryDiffusion.zip -d /home/ec2-user/SageMaker/
              chown -R ec2-user:ec2-user /home/ec2-user/SageMaker/

               # Start to deploy the sagemaker endpoint
              nohup /home/ec2-user/anaconda3/envs/JupyterSystemEnv/bin/jupyter nbconvert --to notebook --ExecutePreprocessor.timeout=1800 --execute /home/ec2-user/SageMaker/StoryDiffusion/sagemaker_deploy.ipynb --stdout --debug &
              echo "Notebook execution completed."

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: SageMakerNotebookInstancePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'sagemaker:CreatePresignedNotebookInstanceUrl'
                  - 'sagemaker:DescribeNotebookInstance'
                Resource: !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:notebook-instance/${NotebookInstanceName}'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:CreateLogGroup'
                  - 'logs:DescribeLogStreams'
                Resource: 
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/sagemaker/*'
              - Effect: Allow
                Action:
                  - 's3:GetBucketLocation'
                  - 's3:ListBucket'
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:CreateBucket'
                  - 's3:DeleteObject'
                Resource:
                  - !Sub 'arn:aws:s3:::sagemaker-${AWS::Region}-${AWS::AccountId}'
                  - !Sub 'arn:aws:s3:::sagemaker-${AWS::Region}-${AWS::AccountId}/*'
                  - !Sub 'arn:aws:s3:::aws-jam-challenge-resources-${AWS::Region}'
                  - !Sub 'arn:aws:s3:::aws-jam-challenge-resources-${AWS::Region}/*'
              - Effect: Allow
                Action:
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:CreateNetworkInterfacePermission'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:DeleteNetworkInterfacePermission'
                  - 'ec2:DescribeNetworkInterfaces'
                Resource: !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:network-interface/*'
              - Effect: Allow
                Action:
                  - 'ec2:DescribeVpcs'
                  - 'ec2:DescribeDhcpOptions'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeSecurityGroups'
                Resource: !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:*/*'
              - Effect: Allow
                Action: 'ec2:CreateTags'
                Resource: !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:network-interface/*'
              - Effect: Allow
                Action:
                  - 'bedrock:InvokeModelWithResponseStream'
                  - 'bedrock:InvokeModel'
                  - 'bedrock:ListFoundationModels'
                Resource: !Sub 'arn:aws:bedrock:${AWS::Region}::foundation-model/*'
              - Effect: Allow
                Action:
                  - 'bedrock:GetUseCaseForModelAccess'
                  - 'bedrock:PutUseCaseForModelAccess'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'sagemaker:AddTags'
                  - 'sagemaker:CreateEndpoint'
                  - 'sagemaker:CreateEndpointConfig'
                  - 'sagemaker:CreateModel'
                  - 'sagemaker:InvokeEndpointAsync'
                  - 'sagemaker:InvokeEndpointWithResponseStream'
                  - 'sagemaker:DescribeEndpoint'
                  - 'sagemaker:InvokeEndpoint'
                  - 'sagemaker:Search'
                Resource: !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/*'
              - Effect: Allow
                Action:
                  - 'ecr:DescribeRepositories'
                  - 'ecr:CreateRepository'
                  - 'ecr:SetRepositoryPolicy'
                  - 'ecr:InitiateLayerUpload'
                  - 'ecr:UploadLayerPart'
                  - 'ecr:CompleteLayerUpload'
                  - 'ecr:PutImage'
                Resource: !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/story-diffusion-inference-api'
              - Effect: Allow
                Action:
                  - 'ecr:GetAuthorizationToken'
                Resource: '*'

Outputs:
  NotebookInstanceName:
    Description: Name of the Notebook Instance
    Value: !Ref NotebookInstance
  NotebookInstanceUrl:
    Description: URL of the Notebook Instance
    Value: !Join
      - ''
      - - 'https://console.aws.amazon.com/sagemaker/home?region='
        - !Ref 'AWS::Region'
        - '#/notebook-instances/openNotebook/'
        - !Ref NotebookInstance
        - '?view=classic'
